{"version":3,"file":"signboard.esm.js","sources":["../src/core/SignBoardError.ts","../src/const/vertex.ts","../src/const/error.ts","../src/const/event.ts","../src/const/options.ts","../src/utils.ts","../src/core/Renderer.ts","../src/texture/ImageTexture.ts","../src/texture/VideoTexture.ts","../src/texture/TextTexture.ts","../src/core/TextureLoader.ts","../src/SignBoard.ts"],"sourcesContent":["/**\n * Special type of known error that {@link SignBoard} throws.\n * @property {number} code Error code\n * @property {string} message Error message\n * @see {@link ERROR_CODE ERROR_CODE}\n */\nclass SignBoardError extends Error {\n  public readonly code: number;\n\n  /**\n   * @param message Error message\n   * @param code Error code\n   */\n  constructor(message: string, code: number) {\n    super(`(signboard.js) ${message}`);\n    Object.setPrototypeOf(this, SignBoardError.prototype);\n    this.name = \"SignBoardError\";\n    this.code = code;\n  }\n}\n\nexport default SignBoardError;\n","export const POSITION = new Float32Array([\n  -1, -1,\n  1, -1,\n  -1, 1,\n  -1, 1,\n  1, -1,\n  1, 1\n]);\n\nexport const TEX_COORD = new Float32Array([\n  0, 1,\n  1, 1,\n  0, 0,\n  0, 0,\n  1, 1,\n  1, 0\n]);\n","/**\n * Error codes of {@link SignBoardError}\n * @name ERROR_CODE\n * @constant\n * @type {object}\n * @property {number} WRONG_TYPE 0\n * @property {number} WRONG_OPTION 1\n * @property {number} ELEMENT_NOT_FOUND 2\n * @property {number} CANVAS_NOT_FOUND 3\n * @property {number} WEBGL_NOT_SUPPORTED 4\n * @property {number} FAILED_COMPILE_SHADER 5\n * @property {number} FAILED_COMPILE_PROGRAM 6\n * @property {number} FAILED_TO_LOAD_IMAGE 7\n * @property {number} TEXTURE_NOT_INITIALIZED 8\n */\nexport const CODE: {\n  [key in keyof typeof MESSAGE]: number;\n} = {\n  WRONG_TYPE: 0,\n  WRONG_OPTION: 1,\n  ELEMENT_NOT_FOUND: 2,\n  ELEMENT_NOT_CANVAS: 3,\n  WEBGL_NOT_SUPPORTED: 4,\n  FAILED_COMPILE_SHADER: 5,\n  FAILED_COMPILE_PROGRAM: 6,\n  FAILED_TO_LOAD_IMAGE: 7,\n  TEXTURE_NOT_INITIALIZED: 8\n};\n\nexport const MESSAGE = {\n  WRONG_TYPE: (val: any, types: string[]) => `${val}(${typeof val}) is not a ${types.map(type => `\"${type}\"`).join(\" or \")}.`,\n  WRONG_OPTION: (val: any, optionName: string, possible: any[]) => `Given value(${val}, ${typeof val}) can't be used for option \"${optionName}\". Possible values are: ${possible.join(\", \")}`,\n  ELEMENT_NOT_FOUND: (query: string) => `Element with selector \"${query}\" not found.`,\n  ELEMENT_NOT_CANVAS: (el: HTMLElement) => `Given element <${el.tagName}> is not a canvas.`,\n  WEBGL_NOT_SUPPORTED: (msg: string) => `WebGL context creation failed with the following error - \"${msg}\"`,\n  FAILED_COMPILE_SHADER: (msg: string | null) => `Failed compiling shader - \"${msg}\"`,\n  FAILED_COMPILE_PROGRAM: (msg: string | null) => `Failed compiling WebGL program - \"${msg}\"`,\n  FAILED_TO_LOAD_IMAGE: (src: string) => `Failed to load image with src - \"${src}\"`,\n  TEXTURE_NOT_INITIALIZED: \"Texture is not initialized yet\"\n};\n","export const BROWSER = {\n  WEBGL_CONTEXT_CREATION_ERROR: \"webglcontextcreationerror\",\n  LOAD: \"load\",\n  ERROR: \"error\",\n  RESIZE: \"resize\",\n  READY_STATE_CHANGE: \"readystatechange\",\n  CAN_PLAY_THROUGH: \"canplaythrough\",\n  LOADED_DATA: \"loadeddata\"\n};\n","/**\n * A constant for the {@link SignBoard#contentType contentType} option\n * @type {object}\n * @property {string} IMAGE \"image\"\n * @property {string} VIDEO \"video\"\n * @property {string} TEXT \"text\"\n * @example\n * ```ts\n * import { CONTENT_TYPE } from \"signboard\";\n * ```\n */\nexport const CONTENT_TYPE = {\n  IMAGE: \"image\",\n  VIDEO: \"video\",\n  TEXT: \"text\"\n} as const;\n\n/**\n * A constant for the {@link SignBoard#objectFit objectFit} option\n * @type {object}\n * @property {string} FILL \"fill\"\n * @property {string} CONTAIN \"contain\"\n * @property {string} COVER \"cover\"\n * @property {string} NONE \"none\"\n * @property {string} SCALE_DOWN \"scale-down\"\n * @example\n * ```ts\n * import { OBJECT_FIT } from \"signboard\";\n * ```\n */\nexport const OBJECT_FIT = {\n  FILL: \"fill\",\n  CONTAIN: \"contain\",\n  COVER: \"cover\",\n  NONE: \"none\",\n  SCALE_DOWN: \"scale-down\"\n} as const;\n","import SignBoardError from \"./core/SignBoardError\";\nimport * as EVENT from \"./const/event\";\nimport * as ERROR from \"./const/error\";\nimport { Merged, ValueOf } from \"./types\";\nimport { CONTENT_TYPE, OBJECT_FIT } from \"./const/options\";\n\nexport function getElement(el: HTMLElement | string | null): HTMLElement | null {\n  let targetEl: HTMLElement | null = null;\n\n  if (typeof el === \"string\") {\n    const queryResult = document.querySelector(el);\n    if (!queryResult) {\n      throw new SignBoardError(ERROR.MESSAGE.ELEMENT_NOT_FOUND(el), ERROR.CODE.ELEMENT_NOT_FOUND);\n    }\n    targetEl = queryResult as HTMLElement;\n  } else if (el && el.nodeType === Node.ELEMENT_NODE) {\n    targetEl = el;\n  }\n\n  return targetEl;\n}\n\nexport const getCanvas = (el: HTMLElement | string): HTMLCanvasElement => {\n  const targetEl = getElement(el);\n\n  if (!targetEl) {\n    throw new SignBoardError(ERROR.MESSAGE.WRONG_TYPE(el, [\"HTMLElement\", \"string\"]), ERROR.CODE.WRONG_TYPE);\n  }\n\n  if (!/^canvas$/i.test(targetEl.tagName)) {\n    throw new SignBoardError(ERROR.MESSAGE.ELEMENT_NOT_CANVAS(targetEl), ERROR.CODE.ELEMENT_NOT_CANVAS);\n  }\n\n  return targetEl as HTMLCanvasElement;\n}\n\nexport const getWebGLContext = (canvas: HTMLCanvasElement): WebGLRenderingContext => {\n  let context: WebGLRenderingContext | null = null;\n  let reason: string = \"\";\n  const contextAttributes: WebGLContextAttributes = {};\n\n  const onWebGLContextCreationError = (e: Event) => {\n    reason = (e as WebGLContextEvent).statusMessage || \"Unknown Error\";\n  }\n\n  canvas.addEventListener(EVENT.BROWSER.WEBGL_CONTEXT_CREATION_ERROR, onWebGLContextCreationError);\n  context = canvas.getContext(\"webgl\", contextAttributes) || canvas.getContext(\"experimental-webgl\") as WebGLRenderingContext;\n  canvas.removeEventListener(EVENT.BROWSER.WEBGL_CONTEXT_CREATION_ERROR, onWebGLContextCreationError);\n\n  if (!context) throw new SignBoardError(ERROR.MESSAGE.WEBGL_NOT_SUPPORTED(reason), ERROR.CODE.WEBGL_NOT_SUPPORTED);\n\n  canvas.addEventListener(\"webglcontextlost\", e => {\n    e.preventDefault();\n  }, false);\n\n  return context;\n}\n\nexport const merge = <From extends {[key: string]: any}, To extends {[key: string]: any}>(target: From, ...sources: To[]): Merged<From, To> => {\n  sources.forEach(source => {\n    Object.keys(source).forEach(key => {\n      (target as any)[key] = source[key];\n    });\n  });\n\n  return target as Merged<From, To>;\n};\n\nexport const clamp = (x: number, min: number, max: number) => Math.max(Math.min(x, max), min);\n\nexport const getSubImage = (\n  contentSize: { width: number; height: number },\n  renderingSize: { width: number; height: number },\n  objectFit: ValueOf<typeof OBJECT_FIT>,\n  contentType: ValueOf<typeof CONTENT_TYPE>\n): { x: number; y: number; width: number; height: number } => {\n  switch (objectFit) {\n    case OBJECT_FIT.FILL: {\n      return { x: 0, y: 0, ...renderingSize }\n    }\n    case OBJECT_FIT.CONTAIN: {\n      const xScale = renderingSize.width / contentSize.width;\n      const yScale = renderingSize.height / contentSize.height;\n\n      if (xScale >= yScale) {\n        const newWidth = contentSize.width * yScale\n        return { x: (renderingSize.width - newWidth) / 2, y: 0, width: newWidth, height: renderingSize.height };\n      } else {\n        const newHeight = contentSize.height * xScale;\n        return { x: 0, y: (renderingSize.height - newHeight) / 2, width: renderingSize.width, height: newHeight };\n      }\n    }\n    case OBJECT_FIT.COVER: {\n      const xScale = renderingSize.width / contentSize.width;\n      const yScale = renderingSize.height / contentSize.height;\n\n      if (xScale >= yScale) {\n        const newHeight = contentSize.height * xScale;\n        return { x: 0, y: (renderingSize.height - newHeight) / 2, width: renderingSize.width, height: newHeight };\n      } else {\n        const newWidth = contentSize.width * yScale\n        const xOffset = contentType === CONTENT_TYPE.TEXT\n          ? 0\n          : (renderingSize.width - newWidth) / 2;\n\n        return { x: xOffset, y: 0, width: newWidth, height: renderingSize.height };\n      }\n    }\n    case OBJECT_FIT.NONE: {\n      return { x: (renderingSize.width - contentSize.width) / 2, y: (renderingSize.height - contentSize.height) / 2, ...contentSize };\n    }\n    case OBJECT_FIT.SCALE_DOWN: {\n      if (contentSize.width > renderingSize.width || contentSize.height > renderingSize.height) {\n        return getSubImage(contentSize, renderingSize, OBJECT_FIT.CONTAIN, contentType);\n      } else {\n        return getSubImage(contentSize, renderingSize, OBJECT_FIT.NONE, contentType);\n      }\n    }\n    default:\n      throw new SignBoardError(\n        ERROR.MESSAGE.WRONG_OPTION(objectFit, \"objectFit\", Object.keys(OBJECT_FIT).map(key => OBJECT_FIT[key as keyof typeof OBJECT_FIT])),\n        ERROR.CODE.WRONG_OPTION\n      )\n  }\n}\n\nexport const parsePadding = (padding: number | number[]) => {\n  if (!Array.isArray(padding)) {\n    return [padding, padding, padding, padding];\n  } else if (padding.length === 2) {\n    return [padding[0], padding[1], padding[0], padding[1]];\n  } else if (padding.length === 4) {\n    return padding;\n  } else {\n    throw new SignBoardError(\n      ERROR.MESSAGE.WRONG_OPTION(padding, \"textPadding\", [\"number\", \"[number, number]\", \"[number, number, number, number]\"]),\n      ERROR.CODE.WRONG_OPTION\n    )\n  }\n}\n","import SignBoardError from \"./SignBoardError\";\nimport SignBoard from \"../SignBoard\";\nimport Texture from \"../texture/Texture\";\nimport signboardVS from \"../shader/signboard.vert\";\nimport signboardFS from \"../shader/signboard.frag\";\nimport * as VERTEX from \"../const/vertex\";\nimport * as ERROR from \"../const/error\";\nimport { getSubImage, getWebGLContext } from \"../utils\";\n\nclass Renderer {\n  private _signboard: SignBoard;\n  private _canvas: HTMLCanvasElement;\n  private _gl: WebGLRenderingContext;\n  private _program: WebGLProgram | null;\n  private _buffers: {\n    position: WebGLBuffer | null,\n    texcoord: WebGLBuffer | null\n  }\n  private _uniforms: {\n    uInvTileSize: WebGLUniformLocation | null,\n    uResolution: WebGLUniformLocation | null,\n    uEmission: WebGLUniformLocation | null,\n    uDissipation: WebGLUniformLocation | null,\n    uBulbSize: WebGLUniformLocation | null,\n    uTexOffset: WebGLUniformLocation | null,\n    uTexScale: WebGLUniformLocation | null,\n    uScrollOffset: WebGLUniformLocation | null\n  }\n  private _texture: Texture | null;\n  private _lastRenderTime: number;\n  private _animationID: number;\n  private _prevScroll: number;\n  private _contextLost: boolean;\n\n  public get animating() { return this._animationID >= 0; }\n\n  // Options\n  public get canvas() { return this._canvas; }\n  public get gl() { return this._gl; }\n\n  public constructor(canvas: HTMLCanvasElement, signboard: SignBoard) {\n    this._signboard = signboard;\n    this._canvas = canvas;\n    this._gl = getWebGLContext(canvas);\n    this._program = null;\n    this._texture = null;\n    this._lastRenderTime = -1;\n    this._animationID = -1;\n    this._prevScroll = 0;\n    this._buffers = {\n      position: null,\n      texcoord: null\n    }\n    this._uniforms = {\n      uInvTileSize: null,\n      uResolution: null,\n      uEmission: null,\n      uDissipation: null,\n      uBulbSize: null,\n      uTexOffset: null,\n      uTexScale: null,\n      uScrollOffset: null\n    };\n    this._contextLost = false;\n  }\n\n  public destroy() {\n    this.stop();\n\n    const gl = this._gl;\n    const texture = this._texture?.webGLTexture;\n\n    gl.deleteProgram(this._program);\n\n    gl.deleteBuffer(this._buffers.position);\n    gl.deleteBuffer(this._buffers.texcoord);\n\n    if (texture) {\n      gl.deleteTexture(texture);\n    }\n\n    gl.getExtension(\"WEBGL_lose_context\")?.loseContext();\n\n    this._texture = null;\n    this._contextLost = true;\n  }\n\n  public init() {\n    if (this._contextLost) return;\n\n    const gl = this._gl;\n    const program = this._createWebGLProgram();\n\n    this._program = program;\n\n    gl.useProgram(program);\n    this._bindAttributes(program);\n    this._bindUniforms(program);\n    this.updateUniforms();\n  }\n\n  public setTexture(texture: Texture) {\n    texture.init(this._gl);\n    this._texture = texture;\n    this.updateTextureOffset();\n  }\n\n  public resize() {\n    const canvas = this._canvas;\n\n    canvas.width = canvas.clientWidth;\n    canvas.height = canvas.clientHeight;\n\n    this.updateUniforms();\n  }\n\n  /**\n   */\n  public start() {\n    this._animationID = requestAnimationFrame(this._onAnimationFrame);\n  }\n\n  /**\n   * Stop animation\n   */\n  public stop() {\n    cancelAnimationFrame(this._animationID);\n    this._animationID = -1;\n    this._lastRenderTime = -1;\n  }\n\n  /**\n   * Render a single frame\n   */\n  public render() {\n    const gl = this._gl;\n    const texture = this._texture;\n\n    if (!this._signboard.initialized) return;\n\n    if (!texture) {\n      throw new SignBoardError(ERROR.MESSAGE.TEXTURE_NOT_INITIALIZED, ERROR.CODE.TEXTURE_NOT_INITIALIZED);\n    }\n\n    texture.upload(this._gl);\n\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  }\n\n  public updateUniforms() {\n    const signboard = this._signboard;\n    const gl = this._gl;\n    const canvas = this._canvas;\n    const uniforms = this._uniforms;\n\n    if (!this._program) return;\n\n    gl.uniform1f(uniforms.uInvTileSize, 1 / signboard.tileSize);\n    gl.uniform2f(uniforms.uResolution, canvas.width, canvas.height);\n    gl.uniform1f(uniforms.uEmission, signboard.emission);\n    gl.uniform1f(uniforms.uDissipation, 1 / signboard.dissipation);\n    gl.uniform1f(uniforms.uBulbSize, signboard.bulbSize);\n\n    if (this._texture) {\n      this.updateTextureOffset();\n    }\n  }\n\n  public updateTextureOffset() {\n    const signboard = this._signboard;\n    const gl = this._gl;\n    const texture = this._texture;\n    const uniforms = this._uniforms;\n\n    if (!texture) {\n      throw new SignBoardError(ERROR.MESSAGE.TEXTURE_NOT_INITIALIZED, ERROR.CODE.TEXTURE_NOT_INITIALIZED);\n    }\n\n    const renderingSize = { width: gl.drawingBufferWidth, height: gl.drawingBufferHeight };\n    const subImage = getSubImage(texture.size, renderingSize, signboard.objectFit, signboard.contentType);\n\n    gl.uniform2f(uniforms.uTexOffset, subImage.x / renderingSize.width, subImage.y / renderingSize.height);\n    gl.uniform2f(uniforms.uTexScale, renderingSize.width / subImage.width, renderingSize.height / subImage.height);\n  }\n\n  private _onAnimationFrame = (time: number) => {\n    const signboard = this._signboard;\n    const lastTime = this._lastRenderTime;\n    const delta = time - lastTime;\n    const updateInterval = 1000 / signboard.frameRate;\n\n    if (delta >= updateInterval || lastTime < 0) {\n      this._increaseScrollOffset();\n      this.render();\n      this._lastRenderTime = lastTime + updateInterval;\n    }\n\n    this._animationID = requestAnimationFrame(this._onAnimationFrame);\n  }\n\n  private _compileShader(src: string, type: WebGLRenderingContextBase[\"VERTEX_SHADER\"] | WebGLRenderingContextBase[\"FRAGMENT_SHADER\"]) {\n    const gl = this._gl;\n    const shader = gl.createShader(type);\n\n    if (!shader) {\n      throw new SignBoardError(ERROR.MESSAGE.FAILED_COMPILE_SHADER(`Unexpected Error: ${gl.getError()}`), ERROR.CODE.FAILED_COMPILE_SHADER);\n    }\n\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw new SignBoardError(ERROR.MESSAGE.FAILED_COMPILE_SHADER(gl.getShaderInfoLog(shader)), ERROR.CODE.FAILED_COMPILE_SHADER);\n    }\n\n    return shader;\n  }\n\n  private _createWebGLProgram() {\n    const gl = this._gl;\n\n    const program = gl.createProgram()!;\n    const vs = this._compileShader(signboardVS, gl.VERTEX_SHADER);\n    const fs = this._compileShader(signboardFS, gl.FRAGMENT_SHADER);\n\n    gl.attachShader(program, vs);\n    gl.attachShader(program, fs);\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter( program, gl.LINK_STATUS)) {\n      throw new SignBoardError(ERROR.MESSAGE.FAILED_COMPILE_PROGRAM(gl.getProgramInfoLog(program)), ERROR.CODE.FAILED_COMPILE_PROGRAM);\n    }\n\n    return program;\n  }\n\n  private _bindAttributes(program: WebGLProgram) {\n    const gl = this._gl;\n    const positionLocation = gl.getAttribLocation(program, \"aPosition\");\n    const texcoordLocation = gl.getAttribLocation(program, \"aTexCoord\");\n\n    const positionBuffer = gl.createBuffer();\n    const texcoordBuffer = gl.createBuffer();\n\n    this._buffers.position = positionBuffer;\n    this._buffers.texcoord = texcoordBuffer;\n\n    gl.enableVertexAttribArray(positionLocation);\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, VERTEX.POSITION, gl.STATIC_DRAW);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.enableVertexAttribArray(texcoordLocation);\n    gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, VERTEX.TEX_COORD, gl.STATIC_DRAW);\n    gl.vertexAttribPointer(texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n  }\n\n  private _bindUniforms(program: WebGLProgram) {\n    const gl = this._gl;\n    const uniforms = this._uniforms;\n\n    for (const key in uniforms) {\n      uniforms[key as keyof typeof uniforms] = gl.getUniformLocation(program, key);\n    }\n  }\n\n  private _increaseScrollOffset() {\n    const signboard = this._signboard;\n    const gl = this._gl;\n    const texture = this._texture;\n    const uniforms = this._uniforms;\n    const scrollSpeed = signboard.scrollSpeed;\n\n    if (scrollSpeed === 0) return;\n\n    if (!texture) {\n      throw new SignBoardError(ERROR.MESSAGE.TEXTURE_NOT_INITIALIZED, ERROR.CODE.TEXTURE_NOT_INITIALIZED);\n    }\n\n    const prevVal = this._prevScroll;\n    const newVal = prevVal + scrollSpeed * (1000 / signboard.frameRate) / gl.drawingBufferWidth;\n\n    this._prevScroll = newVal;\n\n    gl.uniform1f(uniforms.uScrollOffset, newVal);\n  }\n}\n\nexport default Renderer;\n","import Texture from \"./Texture\";\n\nclass ImageTexture implements Texture {\n  private _image: HTMLImageElement;\n  private _texture: WebGLTexture | null;\n\n  public get webGLTexture() { return this._texture; }\n  public get size() { return {\n    width: this._image.naturalWidth,\n    height: this._image.naturalHeight\n  }}\n\n  public constructor(image: HTMLImageElement) {\n    this._image = image;\n    this._texture = null;\n  }\n\n  public init(gl: WebGLRenderingContext) {\n    this._texture = gl.createTexture();\n  }\n\n  public upload(gl: WebGLRenderingContext) {\n    gl.bindTexture(gl.TEXTURE_2D, this._texture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._image);\n  }\n\n  public update(src?: string) {\n    if (!src) return;\n\n    this._image.src = src;\n  }\n}\n\nexport default ImageTexture;\n","import Texture from \"./Texture\";\n\nclass VideoTexture implements Texture {\n  private _video: HTMLVideoElement;\n  private _texture: WebGLTexture | null;\n\n  public get webGLTexture() { return this._texture; }\n  public get size() { return {\n    width: this._video.videoWidth,\n    height: this._video.videoHeight\n  }}\n\n  public constructor(video: HTMLVideoElement) {\n    this._video = video;\n    this._texture = null;\n  }\n\n  public init(gl: WebGLRenderingContext) {\n    this._texture = gl.createTexture();\n    this._video.play();\n  }\n\n  public upload(gl: WebGLRenderingContext) {\n    gl.bindTexture(gl.TEXTURE_2D, this._texture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._video);\n  }\n\n  public update(src?: string) {\n    if (!src) return;\n\n    const video = this._video;\n\n    video.src = src;\n    video.play();\n  }\n}\n\nexport default VideoTexture;\n","import SignBoard, { SignBoardOptions } from \"../SignBoard\";\nimport { parsePadding } from \"../utils\";\nimport Texture from \"./Texture\";\n\nclass TextTexture implements Texture {\n  private _signboard: SignBoard;\n  private _canvas: HTMLCanvasElement;\n  private _context: CanvasRenderingContext2D;\n  private _texture: WebGLTexture | null;\n\n  public get webGLTexture() { return this._texture; }\n  public get size() { return {\n    width: this._canvas.width,\n    height: this._canvas.height\n  }}\n\n  public constructor(signboard: SignBoard) {\n    this._signboard = signboard;\n    this._canvas = document.createElement(\"canvas\");\n    this._context = this._canvas.getContext(\"2d\")!;\n    this._texture = null;\n  }\n\n  public init(gl: WebGLRenderingContext) {\n    const signboard = this._signboard;\n    const text = signboard.src;\n\n    this._texture = gl.createTexture();\n\n    this._drawText(text);\n  }\n\n  public update(src?: string) {\n    const canvas = this._canvas;\n\n    this._context.clearRect(0, 0, canvas.width, canvas.height);\n    this._drawText(src ?? this._signboard.src);\n  }\n\n  public upload(gl: WebGLRenderingContext) {\n    gl.bindTexture(gl.TEXTURE_2D, this._texture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._canvas);\n  }\n\n  private _drawText(text: string) {\n    const canvas = this._canvas;\n    const context = this._context;\n    const signboard = this._signboard;\n    const options = this._getDrawingOptions();\n\n    for (const key in options) {\n      (context as any)[key] = (options as any)[key];\n    }\n\n    const textPadding = parsePadding(signboard.textPadding);\n    const textSize = context.measureText(text);\n\n    canvas.width = textSize.actualBoundingBoxRight - textSize.actualBoundingBoxLeft\n      + textPadding[1] + textPadding[3];\n    canvas.height = (textSize.actualBoundingBoxDescent - textSize.actualBoundingBoxAscent)\n      + textPadding[0] + textPadding[2];\n\n    for (const key in options) {\n      (context as any)[key] = (options as any)[key];\n    }\n\n    context.fillText(text, textPadding[3], textPadding[0]);\n  }\n\n  private _getDrawingOptions() {\n    const signboard = this._signboard;\n\n    return {\n      font: \"32pt serif\",\n      textAlign: \"left\",\n      fillStyle: \"red\",\n      textBaseline: \"top\",\n      ...signboard.textOptions\n    } as Required<SignBoardOptions[\"textOptions\"]>;\n  }\n}\n\nexport default TextTexture;\n","import SignBoardError from \"./SignBoardError\";\nimport SignBoard from \"../SignBoard\";\nimport * as ERROR from \"../const/error\";\nimport { BROWSER } from \"../const/event\";\nimport { CONTENT_TYPE } from \"../const/external\";\nimport Texture from \"../texture/Texture\";\nimport ImageTexture from \"../texture/ImageTexture\";\nimport VideoTexture from \"../texture/VideoTexture\";\nimport TextTexture from \"../texture/TextTexture\";\nimport { Attributes } from \"../types\";\n\nclass TextureLoader {\n  private _signboard: SignBoard;\n\n  public constructor(signboard: SignBoard) {\n    this._signboard = signboard;\n  }\n\n  public async load(): Promise<Texture> {\n    const type = this._signboard.contentType;\n\n    switch (type) {\n      case CONTENT_TYPE.IMAGE:\n        return this._loadImage();\n      case CONTENT_TYPE.VIDEO:\n        return this._loadVideo();\n      case CONTENT_TYPE.TEXT:\n        return new TextTexture(this._signboard);\n      default:\n        throw new SignBoardError(\n          ERROR.MESSAGE.WRONG_OPTION(type, \"contentType\", Object.keys(CONTENT_TYPE).map(key => CONTENT_TYPE[key as keyof typeof CONTENT_TYPE])),\n          ERROR.CODE.WRONG_OPTION\n        )\n    }\n  }\n\n  private async _loadImage(): Promise<ImageTexture> {\n    const signboard = this._signboard;\n    const image = new Image();\n    const src = signboard.src;\n\n    return new Promise((resolve, reject) => {\n      image.addEventListener(BROWSER.LOAD, () => {\n        resolve(new ImageTexture(image));\n      });\n      image.addEventListener(BROWSER.ERROR, () => {\n        reject(new SignBoardError(ERROR.MESSAGE.FAILED_TO_LOAD_IMAGE(src), ERROR.CODE.FAILED_TO_LOAD_IMAGE));\n      });\n\n      const attribs = {\n        crossOrigin: \"anonymous\",\n        ...signboard.contentAttribs\n      } as Attributes<HTMLImageElement>;\n\n      for (const key in attribs) {\n        image[key] = attribs[key];\n      }\n\n      image.src = src;\n    });\n  }\n\n  private async _loadVideo(): Promise<VideoTexture> {\n    const signboard = this._signboard;\n    const video = document.createElement(\"video\");\n    const src = signboard.src;\n\n    return new Promise((resolve, reject) => {\n      video.addEventListener(BROWSER.LOADED_DATA, () => {\n        resolve(new VideoTexture(video));\n      });\n      video.addEventListener(BROWSER.ERROR, () => {\n        reject(new SignBoardError(ERROR.MESSAGE.FAILED_TO_LOAD_IMAGE(src), ERROR.CODE.FAILED_TO_LOAD_IMAGE));\n      });\n\n      const attribs = {\n        loop: true,\n        playsInline: true,\n        autoplay: true,\n        muted: true,\n        crossOrigin: \"anonymous\",\n        ...signboard.contentAttribs\n      } as Attributes<HTMLVideoElement>;\n\n      for (const key in attribs) {\n        video[key] = attribs[key];\n      }\n\n      video.src = src;\n    });\n  }\n}\n\nexport default TextureLoader;\n","import SignBoardError from \"./core/SignBoardError\";\nimport Renderer from \"./core/Renderer\";\nimport TextureLoader from \"./core/TextureLoader\";\nimport { Texture } from \"./texture\";\nimport { BROWSER } from \"./const/event\";\nimport { getCanvas } from \"./utils\";\nimport * as ERROR from \"./const/error\";\nimport { CONTENT_TYPE, OBJECT_FIT } from \"./const/options\";\nimport { Attributes, ValueOf } from \"./types\";\n\n/**\n * @interface\n * @param {\"image\" | \"video\" | \"text\"} [contentType=\"image\"] A type of content\n * @param {object} [contentAttribs={}] Additional attributes for image / video element (if you need it)\n * @param {number} [frameRate=60] A number of rendering frames per second for video / text\n * @param {boolean} [autoResize=true] Enabling this option will make SignBoard to call `resize` whenever window's `resize` event is triggered\n * @param {boolean} [autoInit=true] If `false` is given, SignBoard will not automatically initialize immediately after creating instance\n * @param {number} [tileSize=8] A size of each tile blocks, in px\n * @param {number} [emission=1.5] LED light emission modifier, bigger the brighter. `emission: 1` will render the original color of the contents\n * @param {number} [dissipation=0.5] A value indicating how fast light fades out from the center of each tiles\n * @param {number} [bulbSize=0.7] A lightbulb's size inside each tiles\n * @param {string} [objectFit=\"fill\"] The object-fit CSS property sets how the content of a replaced element, such as an <img\\> or <video\\>, should be resized to fit its container.<br/>See https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit for details\n * @param {object} [textOptions={}] Canvas's 2D context attributes for customizing texts\n * @param {number | Array<number>} [textPadding=0] A padding values that will be used for rendering text\n * @param {number} [scrollSpeed=0] A horizontal scroll speed (right to left)\n * @param {boolean} [initOnFontLoad=false] A option that can be used when you're using a custom font that should be loaded before initializing.<br/>Enabling this option will make SignBoard to call `init` after when the font described in `textOptions.font` is loaded.\n */\nexport interface SignBoardOptions {\n  contentType: ValueOf<typeof CONTENT_TYPE>;\n  contentAttribs: Partial<Attributes<HTMLImageElement> | Attributes<HTMLMediaElement>>;\n  frameRate: number;\n  autoResize: boolean;\n  autoInit: boolean;\n  tileSize: number;\n  emission: number;\n  dissipation: number;\n  bulbSize: number;\n  objectFit: ValueOf<typeof OBJECT_FIT>;\n  textOptions: Partial<Attributes<CanvasRenderingContext2D>>;\n  textPadding: number | number[];\n  scrollSpeed: number;\n  initOnFontLoad: boolean | [boolean, string];\n}\n\n/**\n * WebGL-based LED SignBoard effect for image / video / text\n */\nclass SignBoard {\n  private _renderer: Renderer;\n  private _texture: Texture | null;\n  private _src: string;\n  private _initialized: boolean;\n\n  // Options\n  private _contentType: SignBoardOptions[\"contentType\"];\n  private _contentAttribs: SignBoardOptions[\"contentAttribs\"];\n  private _autoResize: boolean;\n  private _autoInit: boolean;\n  private _frameRate: number;\n  private _tileSize: number;\n  private _emission: number;\n  private _dissipation: number;\n  private _bulbSize: number;\n  private _objectFit: ValueOf<typeof OBJECT_FIT>;\n  private _initOnFontLoad: SignBoardOptions[\"initOnFontLoad\"];\n  private _textOptions: SignBoardOptions[\"textOptions\"];\n  private _textPadding: SignBoardOptions[\"textPadding\"];\n  private _scrollSpeed: number;\n\n  public get renderer() { return this._renderer; }\n  /**\n   * Current src of the image/video, or text string when the `contentType` is \"text\"\n   * @type {string}\n   * @readonly\n   */\n  public get src() { return this._src; }\n  /**\n   * Whether the {@link SignBoard#init} is called\n   * @type {boolean}\n   * @readonly\n   */\n  public get initialized() { return this._initialized; }\n  public get texture() { return this._texture; }\n\n  // Options\n  /**\n   * Current value of the `contentType` option\n   * @see {@link SignBoardOptions}\n   */\n  public get contentType() { return this._contentType; }\n  public set contentType(val: SignBoardOptions[\"contentType\"]) { this._contentType = val; }\n  /**\n   * Current value of the `contentAttribs` option\n   * @see {@link SignBoardOptions}\n   */\n  public get contentAttribs() { return this._contentAttribs; }\n  public set contentAttribs(val: SignBoardOptions[\"contentAttribs\"]) { this._contentAttribs = val; }\n  /**\n   * Current value of the `autoResize` option\n   * @see {@link SignBoardOptions}\n   */\n  public get autoResize() { return this._autoResize; }\n  public set autoResize(val: boolean) { this._updateAutoResize(val); }\n  /**\n   * Current value of the `autoInit` option\n   * @see {@link SignBoardOptions}\n   * @readonly\n   */\n  public get autoInit() { return this._autoInit; }\n  /**\n   * Current value of the `frameRate` option\n   * @see {@link SignBoardOptions}\n   */\n  public get frameRate() { return this._frameRate; }\n  public set frameRate(val: number) { this._frameRate = val; }\n  /**\n   * Current value of the `tileSize` option\n   * @see {@link SignBoardOptions}\n   */\n  public get tileSize() { return this._tileSize; }\n  public set tileSize(val: number) {\n    this._tileSize = val;\n    this._renderer.updateUniforms();\n    this._renderer.render();\n  }\n  /**\n   * Current value of the `emission` option\n   * @see {@link SignBoardOptions}\n   */\n  public get emission() { return this._emission; }\n  public set emission(val: number) {\n    this._emission = val;\n    this._renderer.updateUniforms();\n    this._renderer.render();\n  }\n  /**\n   * Current value of the `dissipation` option\n   * @see {@link SignBoardOptions}\n   */\n  public get dissipation() { return this._dissipation; }\n  public set dissipation(val: number) {\n    this._dissipation = val;\n    this._renderer.updateUniforms();\n    this._renderer.render();\n  }\n  /**\n   * Current value of the `bulbSize` option\n   * @see {@link SignBoardOptions}\n   */\n  public get bulbSize() { return this._bulbSize; }\n  public set bulbSize(val: number) {\n    this._bulbSize = val;\n    this._renderer.updateUniforms();\n    this._renderer.render();\n  }\n  /**\n   * Current value of the `objectFit` option\n   * @see {@link SignBoardOptions}\n   */\n  public get objectFit() { return this._objectFit; }\n  public set objectFit(val: SignBoardOptions[\"objectFit\"]) {\n    this._objectFit = val;\n    this._renderer.updateTextureOffset();\n    this._renderer.render();\n  }\n  /**\n   * Current value of the `textOptions` option\n   * @see {@link SignBoardOptions}\n   */\n  public get textOptions() { return this._textOptions; }\n  public set textOptions(val: SignBoardOptions[\"textOptions\"]) {\n    this._textOptions = val;\n    this.update();\n  }\n  /**\n   * Current value of the `textPadding` option\n   * @see {@link SignBoardOptions}\n   */\n  public get textPadding() { return this._textPadding; }\n  public set textPadding(val: SignBoardOptions[\"textPadding\"]) {\n    this._textPadding = val;\n    this.update();\n  }\n  /**\n   * Current value of the `scrollSpeed` option\n   * @see {@link SignBoardOptions}\n   */\n  public get scrollSpeed() { return this._scrollSpeed; }\n  public set scrollSpeed(val: SignBoardOptions[\"scrollSpeed\"]) { this._scrollSpeed = val; }\n  /**\n   * Current value of the `initOnFontLoad` option\n   * @see {@link SignBoardOptions}\n   * @readonly\n   */\n  public get initOnFontLoad() { return this._initOnFontLoad; }\n\n  /**\n   * @param {string|HTMLElement} canvas CSS query selector or canvas element\n   * @param {string} src Source URL to the image / video\n   * @param {SignBoardOptions} options An options object\n   */\n  public constructor(canvas: string | HTMLElement, src: string, {\n    contentType = CONTENT_TYPE.IMAGE,\n    contentAttribs = {},\n    autoResize = true,\n    autoInit = true,\n    frameRate = 60,\n    tileSize = 8,\n    emission = 1.5,\n    dissipation = 0.5,\n    bulbSize = 0.7,\n    objectFit = OBJECT_FIT.FILL,\n    textOptions = {},\n    textPadding = 0,\n    scrollSpeed = 0,\n    initOnFontLoad = false\n  }: Partial<SignBoardOptions> = {}) {\n    // Core components\n    this._renderer = new Renderer(getCanvas(canvas), this);\n    this._src = src;\n    this._texture = null;\n\n    // Internal States\n    this._initialized = false;\n\n    // Bind options\n    this._contentType = contentType;\n    this._contentAttribs = contentAttribs;\n    this._autoResize = autoResize;\n    this._autoInit = autoInit;\n    this._frameRate = frameRate;\n    this._tileSize = tileSize;\n    this._emission = emission;\n    this._dissipation = dissipation;\n    this._bulbSize = bulbSize;\n    this._objectFit = objectFit;\n    this._textOptions = textOptions;\n    this._textPadding = textPadding;\n    this._scrollSpeed = scrollSpeed;\n    this._initOnFontLoad = initOnFontLoad;\n\n    this.resize = this.resize.bind(this);\n\n    const shouldCheckFontLoad = Array.isArray(initOnFontLoad)\n      ? initOnFontLoad[0]\n      : initOnFontLoad;\n\n    if (autoInit && !shouldCheckFontLoad) {\n      this.init();\n    }\n\n    if (shouldCheckFontLoad) {\n      this._checkFontLoad();\n    }\n  }\n\n  /**\n   * Destroy the current instance, and release all resources\n   * @returns {void}\n   */\n  public destroy() {\n    this._renderer.destroy();\n    this._updateAutoResize(false);\n    this._initialized = false;\n  }\n\n  /**\n   * Initialize SignBoard\n   * @returns {Promise<SignBoard>} The current instance\n   */\n  public async init(): Promise<this> {\n    const renderer = this._renderer;\n    const textureLoader = new TextureLoader(this);\n\n    const texture = await textureLoader.load();\n    this._texture = texture;\n\n    renderer.resize();\n    renderer.init();\n    renderer.setTexture(texture);\n\n    if (this._autoResize) {\n      this._autoResize = false;\n      this._updateAutoResize(true);\n    }\n\n    this._initialized = true;\n    this.start();\n\n    return this;\n  }\n\n  /**\n   * Resize SignBoard with the latest size of the canvas\n   * @returns {SignBoard} The current instance\n   */\n  public resize(): this {\n    const renderer = this._renderer;\n\n    renderer.resize();\n    renderer.render();\n\n    return this;\n  }\n\n  /**\n   * Start rendering\n   * @returns {SignBoard} The current instance\n   */\n  public start(): this {\n    const renderer = this._renderer;\n\n    if (this._contentType === CONTENT_TYPE.VIDEO || this._scrollSpeed !== 0) {\n      renderer.start();\n    } else {\n      // Render single frame\n      renderer.render();\n    }\n\n    return this;\n  }\n\n  /**\n   * Stop rendering\n   * @returns {SignBoard} The current instance\n   */\n  public stop(): this {\n    this._renderer.stop();\n    return this;\n  }\n\n  /**\n   * Update the texture\n   * @param {string?} src New src to the image/video or text string if `contentType` is \"text\"\n   * @returns {SignBoard} The current instance\n   */\n  public update(src?: string): this {\n    const texture = this._texture;\n\n    if (!texture) throw new SignBoardError(ERROR.MESSAGE.TEXTURE_NOT_INITIALIZED, ERROR.CODE.TEXTURE_NOT_INITIALIZED);\n\n    texture.update(src);\n    this._renderer.updateUniforms();\n\n    return this;\n  }\n\n  private _updateAutoResize(newVal: boolean) {\n    const prevVal = this._autoResize;\n\n    if (prevVal === newVal) return;\n\n    if (newVal) {\n      window.addEventListener(BROWSER.RESIZE, this.resize);\n    } else {\n      window.removeEventListener(BROWSER.RESIZE, this.resize);\n    }\n\n    this._autoResize = newVal;\n  }\n\n  private _checkFontLoad() {\n    const font = this._textOptions.font;\n    if (!font || document.fonts.check(font)) {\n      this.init();\n      return;\n    }\n\n    const initOnFontLoad = this._initOnFontLoad;\n    const textToCheck = Array.isArray(initOnFontLoad)\n      ? initOnFontLoad[1]\n      : \"a\";\n\n    document.fonts.load(font, textToCheck).then(() => {\n      this.init();\n    });\n  }\n}\n\nexport default SignBoard;\n"],"names":["__extends","message","code","_super","Object","setPrototypeOf","_this","SignBoardError","prototype","name","Error","POSITION","Float32Array","TEX_COORD","CODE","WRONG_TYPE","WRONG_OPTION","ELEMENT_NOT_FOUND","ELEMENT_NOT_CANVAS","WEBGL_NOT_SUPPORTED","FAILED_COMPILE_SHADER","FAILED_COMPILE_PROGRAM","FAILED_TO_LOAD_IMAGE","TEXTURE_NOT_INITIALIZED","MESSAGE","val","types","map","type","join","optionName","possible","query","el","tagName","msg","src","BROWSER","WEBGL_CONTEXT_CREATION_ERROR","LOAD","ERROR","RESIZE","READY_STATE_CHANGE","CAN_PLAY_THROUGH","LOADED_DATA","CONTENT_TYPE","IMAGE","VIDEO","TEXT","OBJECT_FIT","FILL","CONTAIN","COVER","NONE","SCALE_DOWN","getElement","targetEl","queryResult","document","querySelector","nodeType","Node","ELEMENT_NODE","getCanvas","test","getWebGLContext","canvas","context","reason","contextAttributes","onWebGLContextCreationError","e","statusMessage","addEventListener","EVENT","getContext","removeEventListener","preventDefault","getSubImage","contentSize","renderingSize","objectFit","contentType","x","y","xScale","width","yScale","height","newWidth","newHeight","xOffset","keys","key","parsePadding","padding","Array","isArray","length","signboard","time","_signboard","lastTime","_lastRenderTime","delta","updateInterval","frameRate","_increaseScrollOffset","render","_animationID","requestAnimationFrame","_onAnimationFrame","_canvas","_gl","_program","_texture","_prevScroll","_buffers","position","texcoord","_uniforms","uInvTileSize","uResolution","uEmission","uDissipation","uBulbSize","uTexOffset","uTexScale","uScrollOffset","_contextLost","stop","gl","texture","webGLTexture","deleteProgram","deleteBuffer","deleteTexture","getExtension","loseContext","program","_createWebGLProgram","useProgram","_bindAttributes","_bindUniforms","updateUniforms","init","updateTextureOffset","clientWidth","clientHeight","cancelAnimationFrame","initialized","upload","viewport","drawingBufferWidth","drawingBufferHeight","clear","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","bindTexture","TEXTURE_2D","uniforms","uniform1f","tileSize","uniform2f","emission","dissipation","bulbSize","subImage","size","shader","createShader","getError","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","vs","_compileShader","signboardVS","VERTEX_SHADER","fs","signboardFS","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","positionLocation","getAttribLocation","texcoordLocation","positionBuffer","createBuffer","texcoordBuffer","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","VERTEX","STATIC_DRAW","vertexAttribPointer","FLOAT","getUniformLocation","scrollSpeed","prevVal","newVal","image","_image","naturalWidth","naturalHeight","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","video","_video","videoWidth","videoHeight","play","createElement","_context","text","_drawText","clearRect","options","_getDrawingOptions","textPadding","textSize","measureText","actualBoundingBoxRight","actualBoundingBoxLeft","actualBoundingBoxDescent","actualBoundingBoxAscent","fillText","__assign","font","textAlign","fillStyle","textBaseline","textOptions","Promise","_loadImage","_loadVideo","TextTexture","Image","resolve","reject","ImageTexture","attribs","crossOrigin","contentAttribs","VideoTexture","loop","playsInline","autoplay","muted","_a","_b","_c","_d","_e","autoResize","_f","autoInit","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","initOnFontLoad","_renderer","Renderer","_src","_initialized","_contentType","_contentAttribs","_autoResize","_autoInit","_frameRate","_tileSize","_emission","_dissipation","_bulbSize","_objectFit","_textOptions","_textPadding","_scrollSpeed","_initOnFontLoad","resize","bind","shouldCheckFontLoad","_checkFontLoad","_updateAutoResize","update","destroy","renderer","textureLoader","TextureLoader","load","setTexture","start","window","fonts","check","textToCheck","then"],"mappings":"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"}