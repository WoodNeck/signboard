"use strict";
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateBlogPostFrontMatter = void 0;
/* eslint-disable camelcase */
const utils_validation_1 = require("@docusaurus/utils-validation");
// NOTE: we don't add any default value on purpose here
// We don't want default values to magically appear in doc metadatas and props
// While the user did not provide those values explicitly
// We use default values in code instead
const BlogTagSchema = utils_validation_1.JoiFrontMatter.alternatives().try(utils_validation_1.JoiFrontMatter.string().required(), utils_validation_1.JoiFrontMatter.object({
    label: utils_validation_1.JoiFrontMatter.string().required(),
    permalink: utils_validation_1.JoiFrontMatter.string().required(),
}));
const BlogFrontMatterSchema = utils_validation_1.JoiFrontMatter.object({
    id: utils_validation_1.JoiFrontMatter.string(),
    title: utils_validation_1.JoiFrontMatter.string().allow(''),
    description: utils_validation_1.JoiFrontMatter.string().allow(''),
    tags: utils_validation_1.JoiFrontMatter.array().items(BlogTagSchema),
    draft: utils_validation_1.JoiFrontMatter.boolean(),
    date: utils_validation_1.JoiFrontMatter.date().raw(),
    author: utils_validation_1.JoiFrontMatter.string(),
    author_title: utils_validation_1.JoiFrontMatter.string(),
    author_url: utils_validation_1.JoiFrontMatter.string().uri(),
    author_image_url: utils_validation_1.JoiFrontMatter.string().uri(),
    slug: utils_validation_1.JoiFrontMatter.string(),
    image: utils_validation_1.JoiFrontMatter.string().uri({ relativeOnly: true }),
    keywords: utils_validation_1.JoiFrontMatter.array().items(utils_validation_1.JoiFrontMatter.string().required()),
    hide_table_of_contents: utils_validation_1.JoiFrontMatter.boolean(),
    // TODO re-enable warnings later, our v1 blog posts use those older frontmatter fields
    authorURL: utils_validation_1.JoiFrontMatter.string().uri(),
    // .warning('deprecate.error', { alternative: '"author_url"'}),
    authorTitle: utils_validation_1.JoiFrontMatter.string(),
    // .warning('deprecate.error', { alternative: '"author_title"'}),
    authorImageURL: utils_validation_1.JoiFrontMatter.string().uri(),
    // .warning('deprecate.error', { alternative: '"author_image_url"'}),
})
    .unknown()
    .messages({
    'deprecate.error': '{#label} blog frontMatter field is deprecated. Please use {#alternative} instead.',
});
function validateBlogPostFrontMatter(frontMatter) {
    return utils_validation_1.validateFrontMatter(frontMatter, BlogFrontMatterSchema);
}
exports.validateBlogPostFrontMatter = validateBlogPostFrontMatter;
