"use strict";
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.docuHash = void 0;
const lodash_1 = require("lodash");
const pathUtils_1 = require("./pathUtils");
/**
 * Given an input string, convert to kebab-case and append a hash.
 * Avoid str collision.
 * Also removes part of the string if its larger than the allowed
 * filename per OS. Avoids ERRNAMETOOLONG error.
 */
function docuHash(str) {
    if (str === '/') {
        return 'index';
    }
    const shortHash = pathUtils_1.simpleHash(str, 3);
    const parsedPath = `${lodash_1.kebabCase(str)}-${shortHash}`;
    if (pathUtils_1.isNameTooLong(parsedPath)) {
        return `${pathUtils_1.shortName(lodash_1.kebabCase(str))}-${shortHash}`;
    }
    return parsedPath;
}
exports.docuHash = docuHash;
