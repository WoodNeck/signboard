{"version":3,"file":"signboard.min.js","sources":["../src/core/SignBoardError.ts","../src/const/attribute.ts","../src/const/error.ts","../src/const/event.ts","../src/utils.ts","../src/core/Renderer.ts","../src/const/external.ts","../src/texture/ImageTexture.ts","../src/texture/VideoTexture.ts","../src/core/TextureLoader.ts","../src/SignBoard.ts","../src/index.umd.ts"],"sourcesContent":["class SignBoardError extends Error {\n  constructor(\n    public message: string,\n    public code: number) {\n    super(`(signboard.js) ${message}`);\n    Object.setPrototypeOf(this, SignBoardError.prototype);\n    this.name = \"SignBoardError\";\n  }\n}\n\nexport default SignBoardError;\n","export const POSITION = new Float32Array([\n  -1, -1,\n  1, -1,\n  -1, 1,\n  -1, 1,\n  1, -1,\n  1, 1\n]);\n\nexport const TEX_COORD = new Float32Array([\n  0, 1,\n  1, 1,\n  0, 0,\n  0, 0,\n  1, 1,\n  1, 0\n]);\n","/**\n * Error codes of {@link SignBoardError}\n * @name ERROR_CODES\n * @memberof Constants\n * @type object\n * @property {number} WRONG_TYPE 0\n * @property {number} ELEMENT_NOT_FOUND 1\n * @property {number} CANVAS_NOT_FOUND 2\n * @property {number} WEBGL_NOT_SUPPORTED 3\n * @property {number} FAILED_COMPILE_SHADER 4\n * @property {number} FAILED_COMPILE_PROGRAM 5\n * @property {number} FAILED_TO_LOAD_IMAGE 6\n */\nexport const CODE: {\n  [key in keyof typeof MESSAGE]: number;\n} = {\n  WRONG_TYPE: 0,\n  ELEMENT_NOT_FOUND: 1,\n  ELEMENT_NOT_CANVAS: 2,\n  WEBGL_NOT_SUPPORTED: 3,\n  FAILED_COMPILE_SHADER: 4,\n  FAILED_COMPILE_PROGRAM: 5,\n  FAILED_TO_LOAD_IMAGE: 6\n};\n\nexport const MESSAGE = {\n  WRONG_TYPE: (val: any, types: string[]) => `${typeof val} is not a ${types.map(type => `\"${type}\"`).join(\" or \")}.`,\n  ELEMENT_NOT_FOUND: (query: string) => `Element with selector \"${query}\" not found.`,\n  ELEMENT_NOT_CANVAS: (el: HTMLElement) => `Given element <${el.tagName}> is not a canvas.`,\n  WEBGL_NOT_SUPPORTED: (msg: string) => `WebGL context creation failed with the following error - \"${msg}\"`,\n  FAILED_COMPILE_SHADER: (msg: string | null) => `Failed compiling shader - \"${msg}\"`,\n  FAILED_COMPILE_PROGRAM: (msg: string | null) => `Failed compiling WebGL program - \"${msg}\"`,\n  FAILED_TO_LOAD_IMAGE: (src: string) => `Failed to load image with src - \"${src}\"`\n};\n","export const BROWSER = {\n  WEBGL_CONTEXT_CREATION_ERROR: \"webglcontextcreationerror\",\n  LOAD: \"load\",\n  ERROR: \"error\",\n  RESIZE: \"resize\",\n  READY_STATE_CHANGE: \"readystatechange\",\n  CAN_PLAY_THROUGH: \"canplaythrough\",\n  LOADED_DATA: \"loadeddata\"\n};\n","import SignBoardError from \"./core/SignBoardError\";\nimport * as EVENT from \"./const/event\";\nimport * as ERROR from \"./const/error\";\nimport { Merged } from \"./types\";\n\nexport function getElement(el: HTMLElement | string | null): HTMLElement | null {\n  let targetEl: HTMLElement | null = null;\n\n  if (typeof el === \"string\") {\n    const queryResult = document.querySelector(el);\n    if (!queryResult) {\n      throw new SignBoardError(ERROR.MESSAGE.ELEMENT_NOT_FOUND(el), ERROR.CODE.ELEMENT_NOT_FOUND);\n    }\n    targetEl = queryResult as HTMLElement;\n  } else if (el && el.nodeType === Node.ELEMENT_NODE) {\n    targetEl = el;\n  }\n\n  return targetEl;\n}\n\nexport const getCanvas = (el: HTMLElement | string): HTMLCanvasElement => {\n  const targetEl = getElement(el);\n\n  if (!targetEl) {\n    throw new SignBoardError(ERROR.MESSAGE.WRONG_TYPE(el, [\"HTMLElement\", \"string\"]), ERROR.CODE.WRONG_TYPE);\n  }\n\n  if (!/^canvas$/i.test(targetEl.tagName)) {\n    throw new SignBoardError(ERROR.MESSAGE.ELEMENT_NOT_CANVAS(targetEl), ERROR.CODE.ELEMENT_NOT_CANVAS);\n  }\n\n  return targetEl as HTMLCanvasElement;\n}\n\nexport const getWebGLContext = (canvas: HTMLCanvasElement): WebGLRenderingContext => {\n  let context: WebGLRenderingContext | null = null;\n  let reason: string = \"\";\n  const contextAttributes: WebGLContextAttributes = {};\n\n  const onWebGLContextCreationError = (e: Event) => {\n    reason = (e as WebGLContextEvent).statusMessage || \"Unknown Error\";\n  }\n\n  canvas.addEventListener(EVENT.BROWSER.WEBGL_CONTEXT_CREATION_ERROR, onWebGLContextCreationError);\n  context = canvas.getContext(\"webgl\", contextAttributes) as WebGLRenderingContext;\n  canvas.removeEventListener(EVENT.BROWSER.WEBGL_CONTEXT_CREATION_ERROR, onWebGLContextCreationError);\n\n  if (!context) throw new SignBoardError(ERROR.MESSAGE.WEBGL_NOT_SUPPORTED(reason), ERROR.CODE.WEBGL_NOT_SUPPORTED);\n\n  canvas.addEventListener(\"webglcontextlost\", e => {\n    console.log(\"contextlost\");\n    e.preventDefault();\n  }, false);\n\n  return context;\n}\n\nexport const merge = <From extends {[key: string]: any}, To extends {[key: string]: any}>(target: From, ...sources: To[]): Merged<From, To> => {\n  sources.forEach(source => {\n    Object.keys(source).forEach(key => {\n      (target as any)[key] = source[key];\n    });\n  });\n\n  return target as Merged<From, To>;\n};\n","import SignBoardError from \"./SignBoardError\";\nimport Texture from \"../texture/Texture\";\nimport signboardVS from \"../shader/signboard.vert\";\nimport signboardFS from \"../shader/signboard.frag\";\nimport * as ATTRIBUTE from \"../const/attribute\";\nimport * as ERROR from \"../const/error\";\nimport { getWebGLContext } from \"../utils\";\n\nexport interface RendererOptions {\n  frameRate: number;\n  tileSize: number;\n  emission: number;\n  bulbSize: number;\n}\n\nclass Renderer {\n  private _canvas: HTMLCanvasElement;\n  private _gl: WebGLRenderingContext;\n  private _program: WebGLProgram | null;\n  private _uniforms: {\n    uInvTileSize: WebGLUniformLocation | null,\n    uResolution: WebGLUniformLocation | null,\n    uEmission: WebGLUniformLocation | null,\n    uBulbSize: WebGLUniformLocation | null\n  }\n  private _texture: Texture | null;\n  private _lastRenderTime: number;\n  private _animationID: number;\n\n  // Options\n  private _frameRate: number;\n  private _tileSize: number;\n  private _emission: number;\n  private _bulbSize: number;\n\n  public get canvas() { return this._canvas; }\n  public get gl() { return this._gl; }\n\n  public get frameRate() { return this._frameRate; }\n  public set frameRate(val: number) { this._frameRate = val; }\n  public get tileSize() { return this._tileSize; }\n  public set tileSize(val: number) {\n    this._tileSize = val;\n    this._updateUniforms();\n    this.render();\n  }\n  public get emission() { return this._emission; }\n  public set emission(val: number) {\n    this._emission = val;\n    this._updateUniforms();\n    this.render();\n  }\n  public get bulbSize() { return this._bulbSize; }\n  public set bulbSize(val: number) {\n    this._bulbSize = val;\n    this._updateUniforms();\n    this.render();\n  }\n\n  public constructor(canvas: HTMLCanvasElement, {\n    frameRate,\n    tileSize,\n    emission,\n    bulbSize\n  }: RendererOptions) {\n    this._canvas = canvas;\n    this._gl = getWebGLContext(canvas);\n    this._program = null;\n    this._texture = null;\n    this._lastRenderTime = -1;\n    this._animationID = -1;\n    this._uniforms = {\n      uInvTileSize: null,\n      uResolution: null,\n      uEmission: null,\n      uBulbSize: null\n    };\n\n    // Options\n    this._frameRate = frameRate;\n    this._tileSize = tileSize;\n    this._emission = emission;\n    this._bulbSize = bulbSize;\n  }\n\n  public destroy() {\n    this.stop();\n\n    this._texture = null;\n    this._gl.deleteProgram(this._program);\n  }\n\n  public init() {\n    const gl = this._gl;\n    const program = this._createWebGLProgram();\n\n    this._program = program;\n\n    gl.useProgram(program);\n    this._bindAttributes(program);\n    this._bindUniforms(program);\n    this._updateUniforms();\n  }\n\n  public setTexture(texture: Texture) {\n    texture.init(this._gl);\n    this._texture = texture;\n  }\n\n  public resize() {\n    const canvas = this._canvas;\n\n    canvas.width = canvas.clientWidth;\n    canvas.height = canvas.clientHeight;\n\n    this._updateUniforms();\n  }\n\n  /**\n   */\n  public start() {\n    this._animationID = requestAnimationFrame(this._onAnimationFrame);\n  }\n\n  /**\n   * Stop animation\n   */\n  public stop() {\n    cancelAnimationFrame(this._animationID);\n    this._animationID = -1;\n    this._lastRenderTime = -1;\n  }\n\n  /**\n   * Render a single frame\n   */\n  public render() {\n    const gl = this._gl;\n\n    this._texture!.upload(this._gl);\n\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  }\n\n  private _onAnimationFrame = (time: number) => {\n    const lastTime = this._lastRenderTime;\n    const timeDiff = time - lastTime;\n    const updateInterval = 1000 / this._frameRate;\n\n    if (timeDiff >= updateInterval || lastTime < 0) {\n      this.render();\n      this._lastRenderTime = lastTime + updateInterval;\n    }\n\n    this._animationID = requestAnimationFrame(this._onAnimationFrame);\n  }\n\n  private _compileShader(src: string, type: WebGLRenderingContextBase[\"VERTEX_SHADER\"] | WebGLRenderingContextBase[\"FRAGMENT_SHADER\"]) {\n    const gl = this._gl;\n    const shader = gl.createShader(type)!;\n\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw new SignBoardError(ERROR.MESSAGE.FAILED_COMPILE_SHADER(gl.getShaderInfoLog(shader)), ERROR.CODE.FAILED_COMPILE_SHADER);\n    }\n\n    return shader;\n  }\n\n  private _createWebGLProgram() {\n    const gl = this._gl;\n\n    const program = gl.createProgram()!;\n    const vs = this._compileShader(signboardVS, gl.VERTEX_SHADER);\n    const fs = this._compileShader(signboardFS, gl.FRAGMENT_SHADER);\n\n    gl.attachShader(program, vs);\n    gl.attachShader(program, fs);\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter( program, gl.LINK_STATUS)) {\n      throw new SignBoardError(ERROR.MESSAGE.FAILED_COMPILE_PROGRAM(gl.getProgramInfoLog(program)), ERROR.CODE.FAILED_COMPILE_PROGRAM);\n    }\n\n    return program;\n  }\n\n  private _bindAttributes(program: WebGLProgram) {\n    const gl = this._gl;\n    const positionLocation = gl.getAttribLocation(program, \"aPosition\");\n    const texcoordLocation = gl.getAttribLocation(program, \"aTexCoord\");\n\n    const positionBuffer = gl.createBuffer();\n    const texcoordBuffer = gl.createBuffer();\n\n    gl.enableVertexAttribArray(positionLocation);\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, ATTRIBUTE.POSITION, gl.STATIC_DRAW);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.enableVertexAttribArray(texcoordLocation);\n    gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, ATTRIBUTE.TEX_COORD, gl.STATIC_DRAW);\n    gl.vertexAttribPointer(texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n  }\n\n  private _bindUniforms(program: WebGLProgram) {\n    const gl = this._gl;\n\n    this._uniforms = {\n      uInvTileSize: gl.getUniformLocation(program, \"uInvTileSize\"),\n      uResolution: gl.getUniformLocation(program, \"uResolution\"),\n      uEmission: gl.getUniformLocation(program, \"uEmission\"),\n      uBulbSize: gl.getUniformLocation(program, \"uBulbSize\")\n    }\n  }\n\n  private _updateUniforms() {\n    const gl = this._gl;\n    const canvas = this._canvas;\n    const uniforms = this._uniforms;\n\n    if (!this._program) return;\n\n    gl.uniform1f(uniforms.uInvTileSize, 1 / this._tileSize);\n    gl.uniform2f(uniforms.uResolution, canvas.width, canvas.height);\n    gl.uniform1f(uniforms.uEmission, this._emission);\n    gl.uniform1f(uniforms.uBulbSize, this._bulbSize);\n  }\n}\n\nexport default Renderer;\n","export { CODE as ERROR_CODE } from \"./error\";\n\nexport const CONTENT_TYPE = {\n  IMAGE: \"image\",\n  VIDEO: \"video\"\n} as const;\n","class ImageTexture {\n  private _image: HTMLImageElement;\n  private _texture: WebGLTexture | null;\n\n  public constructor(image: HTMLImageElement) {\n    this._image = image;\n    this._texture = null;\n  }\n\n  public init(gl: WebGLRenderingContext) {\n    this._texture = gl.createTexture();\n  }\n\n  public upload(gl: WebGLRenderingContext) {\n    gl.bindTexture(gl.TEXTURE_2D, this._texture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._image);\n  }\n}\n\nexport default ImageTexture;\n","class VideoTexture {\n  private _video: HTMLVideoElement;\n  private _texture: WebGLTexture | null;\n\n  public constructor(video: HTMLVideoElement) {\n    this._video = video;\n    this._texture = null;\n  }\n\n  public init(gl: WebGLRenderingContext) {\n    this._texture = gl.createTexture();\n    this._video.play();\n  }\n\n  public upload(gl: WebGLRenderingContext) {\n    gl.bindTexture(gl.TEXTURE_2D, this._texture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._video);\n  }\n}\n\nexport default VideoTexture;\n","import SignBoardError from \"./SignBoardError\";\nimport * as ERROR from \"../const/error\";\nimport { BROWSER } from \"../const/event\";\nimport { CONTENT_TYPE } from \"../const/external\";\nimport { ValueOf } from \"../types\";\nimport Texture from \"../texture/Texture\";\nimport ImageTexture from \"../texture/ImageTexture\";\nimport VideoTexture from \"../texture/VideoTexture\";\n\nclass TextureLoader {\n  private _src: string;\n  private _type: ValueOf<typeof CONTENT_TYPE>;\n\n  public constructor(src: string, type: ValueOf<typeof CONTENT_TYPE>) {\n    this._src = src;\n    this._type = type;\n  }\n\n  public async load(): Promise<Texture> {\n    switch (this._type) {\n      case CONTENT_TYPE.IMAGE:\n        return this._loadImage();\n      case CONTENT_TYPE.VIDEO:\n        return this._loadVideo();\n    }\n  }\n\n  private async _loadImage(): Promise<ImageTexture> {\n    const image = new Image();\n    const src = this._src;\n\n    return new Promise((resolve, reject) => {\n      image.addEventListener(BROWSER.LOAD, () => {\n        resolve(new ImageTexture(image));\n      });\n      image.addEventListener(BROWSER.ERROR, () => {\n        reject(new SignBoardError(ERROR.MESSAGE.FAILED_TO_LOAD_IMAGE(src), ERROR.CODE.FAILED_TO_LOAD_IMAGE));\n      });\n\n      image.crossOrigin = \"anonymous\";\n      image.src = src;\n    });\n  }\n\n  private async _loadVideo(): Promise<VideoTexture> {\n    const video = document.createElement(\"video\");\n    const src = this._src;\n\n    return new Promise((resolve, reject) => {\n      video.addEventListener(BROWSER.LOADED_DATA, () => {\n        resolve(new VideoTexture(video));\n      });\n      video.addEventListener(BROWSER.ERROR, () => {\n        reject(new SignBoardError(ERROR.MESSAGE.FAILED_TO_LOAD_IMAGE(src), ERROR.CODE.FAILED_TO_LOAD_IMAGE));\n      });\n\n      video.loop = true;\n      video.playsInline = true;\n      video.crossOrigin = \"anonymous\";\n      video.src = src;\n      video.load();\n    });\n  }\n}\n\nexport default TextureLoader;\n","import Renderer from \"./core/Renderer\";\nimport TextureLoader from \"./core/TextureLoader\";\nimport { BROWSER } from \"./const/event\";\nimport { getCanvas } from \"./utils\";\nimport { CONTENT_TYPE } from \"./const/external\";\nimport { ValueOf } from \"./types\";\n\n/**\n * @interface\n * @param {\"image\" | \"video\"} [contentType=\"image\"]\n * @param {number} [frameRate=60]\n * @param {boolean} [autoResize=true]\n * @param {number} [tileSize=8]\n * @param {number} [emission=1]\n * @param {number} [bulbSize=0.7]\n */\ninterface SignBoardOptions {\n  contentType: ValueOf<typeof CONTENT_TYPE>;\n  frameRate: number;\n  autoResize: boolean;\n  tileSize: number;\n  emission: number;\n  bulbSize: number;\n}\n\nclass SignBoard {\n  private _renderer: Renderer;\n  private _src: string;\n  private _initialized: boolean;\n\n  // Options\n  private _contentType: ValueOf<typeof CONTENT_TYPE>;\n  private _autoResize: boolean;\n\n  public get renderer() { return this._renderer; }\n  public get src() { return this._src; }\n  public get initialized() { return this._initialized; }\n\n  // Options\n  public get contentType() { return this._contentType; }\n  public set contentType(val: ValueOf<typeof CONTENT_TYPE>) { this._contentType = val; }\n  public get frameRate() { return this._renderer.frameRate; }\n  public set frameRate(val: number) { this._renderer.frameRate = val; }\n  public get tileSize() { return this._renderer.tileSize; }\n  public set tileSize(val: number) { this._renderer.tileSize = val; }\n  public get autoResize() { return this._autoResize; }\n  public set autoResize(val: boolean) { this._updateAutoResize(val); }\n\n  /**\n   *\n   * @param {string|HTMLElement} canvas CSS query selector or canvas element\n   * @param {string} src Source URL to the image / video\n   * @param {SignBoardOptions} options An options object\n   */\n  public constructor(canvas: string | HTMLElement, src: string, {\n    contentType = CONTENT_TYPE.IMAGE,\n    frameRate = 60,\n    autoResize = true,\n    tileSize = 8,\n    emission = 1,\n    bulbSize = 0.7\n  }: Partial<SignBoardOptions> = {}) {\n    // Core components\n    this._renderer = new Renderer(getCanvas(canvas), {\n      frameRate,\n      tileSize,\n      emission,\n      bulbSize\n    });\n    this._src = src;\n\n    // Internal States\n    this._initialized = false;\n\n    // Bind options\n    this._contentType = contentType\n    this._autoResize = autoResize;\n\n    this.resize = this.resize.bind(this);\n\n    this.init();\n  }\n\n  public async init() {\n    const renderer = this._renderer;\n    const textureLoader = new TextureLoader(this._src, this._contentType);\n\n    const texture = await textureLoader.load();\n\n    renderer.resize();\n    renderer.init();\n    renderer.setTexture(texture);\n\n    if (this._contentType === CONTENT_TYPE.VIDEO) {\n      renderer.start();\n    } else {\n      renderer.render();\n    }\n\n    if (this._autoResize) {\n      this._autoResize = false;\n      this._updateAutoResize(true);\n    }\n    this._initialized = true;\n  }\n\n  public resize() {\n    const renderer = this._renderer;\n\n    renderer.resize();\n    renderer.render();\n  }\n\n  private _updateAutoResize(newVal: boolean) {\n    const prevVal = this._autoResize;\n\n    if (prevVal === newVal) return;\n\n    if (newVal) {\n      window.addEventListener(BROWSER.RESIZE, this.resize);\n    } else {\n      window.removeEventListener(BROWSER.RESIZE, this.resize);\n    }\n\n    this._autoResize = newVal;\n  }\n}\n\nexport default SignBoard;\n","import SignBoard from './SignBoard';\n\nimport * as Core from \"./core\";\nimport * as Texture from \"./texture\";\nimport * as Constants from \"./const/external\";\nimport { merge } from \"./utils\";\n\nmerge(SignBoard, Core);\nmerge(SignBoard, Texture);\nmerge(SignBoard, Constants);\n\nexport default SignBoard;\n"],"names":["Error","message","code","_super","_this","Object","setPrototypeOf","SignBoardError","prototype","name","POSITION","Float32Array","TEX_COORD","CODE","WRONG_TYPE","ELEMENT_NOT_FOUND","ELEMENT_NOT_CANVAS","WEBGL_NOT_SUPPORTED","FAILED_COMPILE_SHADER","FAILED_COMPILE_PROGRAM","FAILED_TO_LOAD_IMAGE","MESSAGE","val","types","map","type","join","query","el","tagName","msg","src","BROWSER","getCanvas","targetEl","queryResult","document","querySelector","ERROR","nodeType","Node","ELEMENT_NODE","getElement","test","getWebGLContext","canvas","onWebGLContextCreationError","e","reason","statusMessage","context","addEventListener","EVENT","getContext","removeEventListener","console","log","preventDefault","merge","target","_i","sources","forEach","source","keys","key","this","_canvas","_gl","_frameRate","_tileSize","_updateUniforms","render","_emission","_bulbSize","stop","_texture","deleteProgram","_program","gl","program","_createWebGLProgram","useProgram","_bindAttributes","_bindUniforms","texture","init","width","clientWidth","height","clientHeight","_animationID","requestAnimationFrame","_onAnimationFrame","cancelAnimationFrame","_lastRenderTime","upload","viewport","drawingBufferWidth","drawingBufferHeight","clear","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","bindTexture","TEXTURE_2D","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","vs","_compileShader","VERTEX_SHADER","fs","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","positionLocation","getAttribLocation","texcoordLocation","positionBuffer","createBuffer","texcoordBuffer","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","ATTRIBUTE","STATIC_DRAW","vertexAttribPointer","FLOAT","_uniforms","uInvTileSize","getUniformLocation","uResolution","uEmission","uBulbSize","uniforms","uniform1f","uniform2f","_a","frameRate","tileSize","emission","bulbSize","time","lastTime","updateInterval","CONTENT_TYPE","IMAGE","VIDEO","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","_image","image","_video","play","video","Promise","_type","_loadImage","_loadVideo","Image","_src","resolve","reject","ImageTexture","crossOrigin","createElement","VideoTexture","loop","playsInline","load","_renderer","_initialized","_contentType","_autoResize","_updateAutoResize","renderer","TextureLoader","resize","setTexture","start","newVal","window","_b","_c","contentType","_d","_e","autoResize","_f","_g","_h","Renderer","bind","SignBoard","Texture","Constants"],"mappings":"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"}